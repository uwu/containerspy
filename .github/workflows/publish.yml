name: Publish Docker Image

on:
   push:
      branches:
         - master
         - multi-runner-docker
      tags:
         - v**
   workflow_dispatch:

env:
   REGISTRY: ghcr.io
   IMAGE: ${{ github.repository }}

jobs:
   publish-base:
      name: Publish ${{ matrix.arch }} image
      strategy:
         matrix:
            include:
               -  arch: arm64
                  os: ubuntu-24.04-arm
               -  arch: amd64
                  os: ubuntu-24.04

      runs-on: ${{ matrix.os }}
      env:
         ARCH: ${{matrix.arch}}
      permissions:
         packages: write
      steps:
         -  name: Check out the repo
            uses: actions/checkout@v4

         -  name: Setup variables
            id: variables
            run: |
               # TODO: share this code with the actual multi arch publisher
               # docker/build-push-action supports comma separated tags
               DOCKER_IMAGE_TAG_BASE="$REGISTRY/$IMAGE"
               DOCKER_IMAGE_TAGS="$DOCKER_IMAGE_TAG_BASE:dev-$ARCH"

               # if this is a versioned release, github.ref will start with 'refs/tags/v'
               GH_REF="${{ github.ref }}"
               # cut off 'refs/tags/v'
               if [[ $GH_REF == "refs/tags/v"* ]]; then
                  VERSION=$(echo $GH_REF | cut -c 12-)
                  DOCKER_IMAGE_TAGS="$DOCKER_IMAGE_TAGS,$DOCKER_IMAGE_TAG_BASE:latest-$ARCH,$DOCKER_IMAGE_TAG_BASE:$VERSION-$ARCH"
               fi

               echo "DOCKER_IMAGE_TAGS=$DOCKER_IMAGE_TAGS" >> "$GITHUB_OUTPUT"

         -  name: Log in to ghcr.io
            uses: docker/login-action@v3
            with:
               registry: ghcr.io
               username: ${{ github.actor }}
               password: ${{ secrets.GITHUB_TOKEN }}

         -  name: Set up Docker Buildx # Even if we don't directly invoke buildx it should set up github action caches, which is nice
            uses: docker/setup-buildx-action@v3
         -  name: Build and push Docker Image
            uses: docker/build-push-action@v6
            id: upload-docker-image
            with:
               context: .
               push: true
               tags: ${{ steps.variables.outputs.DOCKER_IMAGE_TAGS }}
               cache-from: type=gha
               cache-to: type=gha,mode=max
         -  name: Write digest
            run: |
               digest="${{ steps.upload-docker-image.outputs.digest }}"
               mkdir -p digests
               touch "digests/${digest#sha256:}"

         -  name: Upload docker image digest
            uses: actions/upload-artifact@v4
            with:
               if-no-files-found: error
               name: digests-${{ matrix.arch }}
               path: digests/*

   publish-multiarch:
      name: Publish multi-arch image
      needs: publish-base
      runs-on: ubuntu-24.04
      permissions:
         packages: write
      steps:
         -  name: Download digests
            uses: actions/download-artifact@v4
            with:
               path: digests
               pattern: digests-*
               merge-multiple: true

         -  name: Setup variables
            id: variables
            run: |
               # docker/build-push-action supports comma separated tags
               DOCKER_IMAGE_TAG_BASE="$REGISTRY/$IMAGE"
               DOCKER_IMAGE_TAGS="$DOCKER_IMAGE_TAG_BASE:dev"

               # if this is a versioned release, github.ref will start with 'refs/tags/v'
               GH_REF="${{ github.ref }}"
               # cut off 'refs/tags/v'
               if [[ $GH_REF == "refs/tags/v"* ]]; then
                  VERSION=$(echo $GH_REF | cut -c 12-)
                  DOCKER_IMAGE_TAGS="$DOCKER_IMAGE_TAGS,$DOCKER_IMAGE_TAG_BASE:latest,$DOCKER_IMAGE_TAG_BASE:$VERSION"
               fi

               echo "DOCKER_IMAGE_TAGS=$DOCKER_IMAGE_TAGS" >> "$GITHUB_OUTPUT"

         -  name: Log in to ghcr.io
            uses: docker/login-action@v3
            with:
               registry: ghcr.io
               username: ${{ github.actor }}
               password: ${{ secrets.GITHUB_TOKEN }}


         -  name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

         -  name: Create manifest list
            run: |
               cd digests
               docker buildx imagetools create \
                  `# A -t {tag} for each tag in DOCKER_IMAGE_TAGS` \
                  $(echo '${{ steps.variables.outputs.DOCKER_IMAGE_TAGS }}'| tr ',' '\n' | sed -e 's|.*|-t \0|') \
                  `# Then a reference for each of the arches. This uses the fact that printf repeats its format string if it has too many arguments.` \
                  $(printf '${{env.REGISTRY}}/${{ env.IMAGE }}@sha256:%s ' *)
